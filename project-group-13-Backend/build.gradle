plugins {
	id 'org.springframework.boot' version '2.3.4.RELEASE'
	id 'io.spring.dependency-management' version '1.0.10.RELEASE'
	id 'java'
	id 'application'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

sourceSets {
  main {
    java { srcDir 'src/main/java' }
  }
  test {
    java { srcDir 'src/test/java'}
  }
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	//is this ok??
	implementation 'org.hibernate:hibernate-core:5.4.22.Final'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation "junit:junit:4.12"
	// https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt
	compile group: 'io.jsonwebtoken', name: 'jjwt', version: '0.2'
	// https://mvnrepository.com/artifact/org.springframework.security/spring-security-core
	compile group: 'org.springframework.security', name: 'spring-security-web', version: '5.2.2.RELEASE'
	// https://mvnrepository.com/artifact/org.springframework.security/spring-security-core
	compile group: 'org.springframework.security', name: 'spring-security-config', version: '5.2.2.RELEASE'
	// https://mvnrepository.com/artifact/org.springframework.security/spring-security-jwt
	compile group: 'org.springframework.security', name: 'spring-security-jwt', version: '1.0.9.RELEASE'
	// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-mail
	compile group: 'org.springframework.boot', name: 'spring-boot-starter-mail', version: '1.2.0.RELEASE'
	// https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
	compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.0'


}
task compile(type: JavaCompile) {
  classpath = sourceSets.main.compileClasspath
  classpath += sourceSets.test.runtimeClasspath
  sourceSets.test.java.outputDir = file('build/bin')
  sourceSets.main.java.outputDir = file('build/bin')
}
test {
	useJUnitPlatform()
}
mainClassName = 'ca.mcgill.ecse321.projectgroup13.ProjectGroup13Application'
bootJar {
    mainClassName = "ca.mcgill.ecse321.projectgroup13.ProjectGroup13Application"
}

jar {
  destinationDir=file('distributable')
  manifest {
    // It is smart to reuse the name of the main class variable instead of hardcoding it
    attributes "Main-Class": "ca.mcgill.ecse321.projectgroup13.ProjectGroup13Application"
  }
}

